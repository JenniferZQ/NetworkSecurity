一、判断题
Java 是编译型语言。
错。

Javascript 中，不区分大小写字母，也就是说 A 和 a 是同一个变量。
错。

Javascript 中的常量包括 String、Number、Boolean、Null、Undefined。
错。

String 字符串的语法中既可以使用单引号，也可以使用双引号。
对。

typeof 是用来判断变量类型，不可以当作运算符使用。
错。

任何值和 undefined 运算，undefined 可看做 0 运算。
错。

二、请分别描述下列代码中“+”的作用
console.log(“年龄:” + 20);
拼接。

console.log(11+22+33);
计算。

console.log(“网络 + 安全”);
字符串输出。

var a = 1;
var b = 2;
console.log(“a” + b);
拼接。

var a = 1;
var b = 2;
console.log(“a + b”);
字符串输出。

三、计算下述代码的打印值
var a = 10;
var b = 10;
console.log(a++);  // 10
console.log(++a);  // 12
console.log(–b);  // 9
console.log(b–);  // 9

四、分别使用行内式、内嵌式、引入外部文件的方法造成网页弹窗，要求触发弹窗的 JavaScript 命令不止一种（alert、print、prompt）。
行内式：
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <img src="https://static001.geekbang.org/static/university/img/university-logo.3d6b4cc3.svg" 
    width="500" onload="alert('图片加载完成')" />
</body>
</html>

内嵌式：
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script type="text/javascript">
        function loadImage(){
            alert("图片加载完成");
        }
    </script> 
    <img src="https://static001.geekbang.org/static/university/img/university-logo.3d6b4cc3.svg" 
    width="500" onload=loadImage() />
</body>
</html>

引入外部文件：
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <img src="https://static001.geekbang.org/static/university/img/university-logo.3d6b4cc3.svg" 
    width="500"/>
    <script src="8.12work.js"></Script>
</body>
</html>

// 8.12work.js
function loadImage(){
    alert("图片加载完成");
};
loadImage();

五、安装 Docker 并练习以下基础命令、帮助命令、镜像命令和容器命令:
帮助命令
docker 命令 --help
[root@localhost docker]# docker image --help
Usage:  docker image COMMAND
Manage images
Commands:
  build       Build an image from a Dockerfile
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Display detailed information on one or more images
  load        Load an image from a tar archive or STDIN
  ls          List images
  prune       Remove unused images
  pull        Download an image from a registry
  push        Upload an image to a registry
  rm          Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
Run 'docker image COMMAND --help' for more information on a command.

镜像命令
docker images 列出所有镜像
[root@localhost docker]# docker image ls
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
hello-world   latest    9c7a54a9a43c   3 months ago    13.3kB
centos        latest    5d0da3dc9764   23 months ago   231MB

docker search 搜索镜像
[root@localhost docker]# docker search centos --filter=STARS=5000
NAME      DESCRIPTION                                 STARS     OFFICIAL   AUTOMATED
centos    DEPRECATED; The official build of CentOS.   7627      [OK]

docker pull 下载镜像
[root@localhost docker]# docker pull mysql
Using default tag: latest
latest: Pulling from library/mysql
b193354265ba: Pull complete 
14a15c0bb358: Pull complete 
02da291ad1e4: Pull complete 
9a89a1d664ee: Pull complete 
a24ae6513051: Pull complete 
b85424247193: Pull complete 
9a240a3b3d51: Pull complete 
8bf57120f71f: Pull complete 
c64090e82a0b: Pull complete 
af7c7515d542: Pull complete 
Digest: sha256:c0455ac041844b5e65cd08571387fa5b50ab2a6179557fd938298cab13acf0dd
Status: Downloaded newer image for mysql:latest
docker.io/library/mysql:latest

docker rmi 删除镜像
[root@localhost docker]# docker rmi 9c7a54a9a43c
Error response from daemon: conflict: unable to delete 9c7a54a9a43c (must be forced) - image is being used by stopped container 736e76240e25
[root@localhost docker]# docker rm 736e76240e25
736e76240e25
[root@localhost docker]# docker rmi 9c7a54a9a43c
Untagged: hello-world:latest
Untagged: hello-world@sha256:dcba6daec718f547568c562956fa47e1b03673dd010fe6ee58ca806767031d1c
Deleted: sha256:9c7a54a9a43cca047013b82af109fe963fde787f63f9e016fdc3384500c2823d
Deleted: sha256:01bb4fce3eb1b56b05adf99504dafd31907a5aadac736e36b27595c8b92f07f1
